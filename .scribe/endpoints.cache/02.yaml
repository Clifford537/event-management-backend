## Autogenerated by Scribe. DO NOT MODIFY.

name: Events
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: 'api/{org_slug}/events'
    metadata:
      groupName: Events
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'List events for an organization'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_AUTH_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      org_slug:
        name: org_slug
        description: 'The slug of the org.'
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      org_slug: consequatur
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"events":[{"id":1,"organization_id":2,"title":"Org3 Event","description":"Description","date":"2025-05-21","venue":"Venue"}]}'
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: '{"error":"Organization not found"}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/{org_slug}/events'
    metadata:
      groupName: Events
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Create a new event'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_AUTH_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      org_slug:
        name: org_slug
        description: 'The slug of the org.'
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      org_slug: consequatur
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      title:
        name: title
        description: 'The title of the event'
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      description:
        name: description
        description: 'The description of the event'
        required: false
        example: 'Dolores dolorum amet iste laborum eius est dolor.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      date:
        name: date
        description: 'The date of the event (YYYY-MM-DD)'
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      venue:
        name: venue
        description: 'The venue of the event'
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      price:
        name: price
        description: 'The price of the event'
        required: false
        example: consequatur
        type: numeric
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      max_attendees:
        name: max_attendees
        description: 'The max number of attendees'
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      status:
        name: status
        description: 'The status of the event (draft, published, cancelled)'
        required: false
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      title: consequatur
      description: 'Dolores dolorum amet iste laborum eius est dolor.'
      date: consequatur
      venue: consequatur
      price: consequatur
      max_attendees: 17
      status: consequatur
    fileParameters: []
    responses:
      -
        status: 201
        content: '{"event":{...}}'
        headers: []
        description: ''
        custom: []
      -
        status: 403
        content: '{"error":"Unauthorized"}'
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: '{"message":"Validation failed.","errors":{...}}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/{org_slug}/events/{id}'
    metadata:
      groupName: Events
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get a specific event by ID'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_AUTH_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      org_slug:
        name: org_slug
        description: 'The slug of the org.'
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      id:
        name: id
        description: 'The ID of the event.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      org_slug: consequatur
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"event":{...}}'
        headers: []
        description: ''
        custom: []
      -
        status: 403
        content: '{"error":"Unauthorized"}'
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: '{"message":"Event not found."}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/{org_slug}/events/{id}'
    metadata:
      groupName: Events
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update an existing event'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_AUTH_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      org_slug:
        name: org_slug
        description: 'The slug of the org.'
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      id:
        name: id
        description: 'The ID of the event.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      org_slug: consequatur
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      title:
        name: title
        description: 'The title of the event'
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      description:
        name: description
        description: 'The description of the event'
        required: false
        example: 'Dolores dolorum amet iste laborum eius est dolor.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      date:
        name: date
        description: 'The date of the event (YYYY-MM-DD)'
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      venue:
        name: venue
        description: 'The venue of the event'
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      price:
        name: price
        description: 'The price of the event'
        required: false
        example: consequatur
        type: numeric
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      max_attendees:
        name: max_attendees
        description: 'The max number of attendees'
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      status:
        name: status
        description: 'The status of the event (draft, published, cancelled)'
        required: false
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      title: consequatur
      description: 'Dolores dolorum amet iste laborum eius est dolor.'
      date: consequatur
      venue: consequatur
      price: consequatur
      max_attendees: 17
      status: consequatur
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"event":{...}}'
        headers: []
        description: ''
        custom: []
      -
        status: 403
        content: '{"error":"Unauthorized"}'
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: '{"message":"Validation failed.","errors":{...}}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/{org_slug}/events/{id}'
    metadata:
      groupName: Events
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete an event'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_AUTH_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      org_slug:
        name: org_slug
        description: 'The slug of the org.'
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      id:
        name: id
        description: 'The ID of the event.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      org_slug: consequatur
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"message":"Event deleted successfully."}'
        headers: []
        description: ''
        custom: []
      -
        status: 403
        content: '{"error":"Unauthorized"}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
